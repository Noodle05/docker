  location /router {
    sub_filter_once    off;
    sub_filter_types   text/plain text/javascript text/css;
    sub_filter         'href="/' 'href="/router/';
    sub_filter         "href = '/" "href = '/router/";
    sub_filter         "href='/" "href='/router/";
    sub_filter         'src="/' 'src="/router/';
    sub_filter         "src='/" "src='/router/";
    sub_filter         "src = '/" "src = '/router/";
    sub_filter         'src = "/' 'src = "/router/';
    sub_filter         'src : "/' 'src : "/router/';
    sub_filter         'url(/' 'url(/router/';
    sub_filter         "url: '/" "url: '/router/";
    sub_filter         'url: "/' 'url: "/router/';
    sub_filter         "url('/" "url('/router/";
    sub_filter         'url("/' 'url("/router/';
    sub_filter         'url = "/' 'url = "/router/';
    sub_filter         "require(['/" "require(['/router/";
    sub_filter         'getJSON("/' 'getJSON("/router/';
    sub_filter         'defaultRouterFrame = "/' 'defaultRouterFrame = "/router/';
    sub_filter         "makeRequest.start('/" "makeRequest.start('/router/";
    sub_filter         "[href\*='/" "[href\*='/router/";
    sub_filter         'addNewScript("/' 'addNewScript("/router/';
    sub_filter         'load("/' 'load("/router/';
    sub_filter         "from '/" "from '/router/";
    sub_filter         "switch_container_path: '/" "switch_container_path: '/router/";
    sub_filter         "switch_container_path = '/" "switch_container_path = '/router/";
    sub_filter         "switch_path: '/" "switch_path: '/router/";
    sub_filter         "switch_path = '/" "switch_path = '/router/";
    sub_filter         'setAttribute("src", "/' 'setAttribute("src", "/router/';
    sub_filter         'post("/' 'post("/router/';
    sub_filter         'addNewCSS("/' 'addNewCSS("/router';
    sub_filter         'dynamic_include_js("/' 'dynamic_include_js("/router/';
    #sub_filter         'aidiskForm.action = "/' 'aidiskForm.action = "/router/';
    sub_filter         'action="/' 'action="/router/';

    rewrite            /router/(.*) /$1 break;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection $connection_upgrade;

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_redirect     off;

    proxy_pass         http://router/;

    access_log         off;
    log_not_found      off;
  }
